from itertools import combinations

bank_trans = xl("B2:D7", headers=True)
financ_trans = xl("F2:H9", headers=True)

def find_val_comb(bank_trans, financ_trans):
    results = []
    for n1 in range(1, len(financ_trans) + 1):
        for n2 in range(1, len(financ_trans) + 1):
            for n3 in range(1, len(financ_trans) + 1):
                for combo1 in combinations(financ_trans.iterrows(), n1):
                    for combo2 in combinations(financ_trans.iterrows(), n2):
                        for combo3 in combinations(financ_trans.iterrows(), n3):
                            if len(set([f[0] for f in combo1 + combo2 + combo3])) == len(combo1 + combo2 + combo3):
                                value1 = sum([f[1]['Value'] for f in combo1])
                                value2 = sum([f[1]['Value'] for f in combo2])
                                value3 = sum([f[1]['Value'] for f in combo3])
                                
                                if value1 == 10 and value2 == 40 and value3 == 14:
                                    f_ids1 = '+'.join([f[1]['ID'] for f in combo1])
                                    f_ids2 = '+'.join([f[1]['ID'] for f in combo2])
                                    f_ids3 = '+'.join([f[1]['ID'] for f in combo3])
                                    
                                    results.append(f"B1={f_ids1}, B2={f_ids2}, B3+B4=F6, B5={f_ids3}")
    
    return results

valid_combs = find_val_comb(bank_trans, financ_trans)
result_df = pd.DataFrame(valid_combs, columns=['Matching Scenarios'])

Scenarios = []
for index, row in result_df.iterrows():
    Scenarios.append(row['Matching Scenarios'])
Scenarios
